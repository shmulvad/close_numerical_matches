name: Upload Python Package

on:
  push:
    tags:
      - "*"

jobs:
  mac-and-windows-and-linux-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    - name: Install deps
      run: python -m pip install cibuildwheel==2.16.2 twine==4.0.2 numpy
    - name: Build wheels
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      env:
        CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8.0"
        CIBW_BUILD: "cp3*"
        CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
        CIBW_ARCHS_LINUX: "auto aarch64"
        CIBW_ARCHS_WINDOWS: "x86 AMD64 ARM64"
      run: python -m cibuildwheel --output-dir wheelhouse
    - name: Publish
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload --skip-existing wheelhouse/*
  pure-python-wheel-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    - name: Install deps
      run: python -m pip install wheel==0.41.3 twine==4.0.2 numpy
    - name: Build pure python wheel
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      env:
        SS_SKIP_COMPILE: "1"
      run: pip wheel -w wheelhouse .
    - name: Publish
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload --skip-existing wheelhouse/*
