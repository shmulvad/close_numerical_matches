name: CI

on: [push, pull_request]

jobs:
  test-code:
    name: ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ruff==0.0.257 mypy==1.1.1 pytest numpy twine wheel
    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        ruff check --format=github .
    - name: Typecheck with mypy
      run: |
        mypy --install-types --non-interactive close_numerical_matches/
    - name: Test with pytest
      run: |
        pytest .
  test-build:
    name: build-test-${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.11"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest twine wheel build mypy numpy
    - name: build wheel and then remove code
      run: |
        python -m build
        rm -rf ./close_numerical_matches
    - name: install built wheel
      run: |
        find ./dist -name '*.whl'| head -n 1 | xargs pip install
    - name: Run Tests
      run: |
        pytest .
  test-non-compiled-build:
    name: build-non-compiled-test-${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.11"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest twine wheel build mypy numpy
    - name: build wheel and then remove code
      env:
        SS_SKIP_COMPILE: "1"
      run: |
        python -m build
        rm -rf ./close_numerical_matches
    - name: install built wheel
      run: |
        find ./dist -name '*.whl'| head -n 1 | xargs pip install
    - name: Run Tests
      run: |
        pytest .
